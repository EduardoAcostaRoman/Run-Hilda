# compiler: R8
# compiler_version: 3.3.83
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: bba83b4
# pg_map_hash: SHA-256 bba83b457e9b1f6de6ab39ec377cbfc9b1d0c7921a278f5036a4737bb0706282
com.unity.androidnotifications.NotificationChannelWrapper -> com.unity.androidnotifications.a:
    long[] vibrationPattern -> c
    java.lang.String id -> a
    int lockscreenVisibility -> d
    int importance -> b
    java.lang.String group -> e
com.unity.androidnotifications.UnityNotificationBackgroundThread -> com.unity.androidnotifications.b:
    java.util.concurrent.LinkedTransferQueue mTasks -> a
    com.unity.androidnotifications.UnityNotificationManager mManager -> c
    java.util.concurrent.ConcurrentHashMap mScheduledNotifications -> b
    int mTasksSinceHousekeeping -> d
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelAllNotificationsTask.<init>(com.unity.androidnotifications.UnityNotificationBackgroundThread$1):0:0 -> a
    1:1:void enqueueCancelAllNotifications():0 -> a
    2:2:void enqueueCancelAllNotifications():0:0 -> a
    void enqueueCancelNotification(int) -> a
    void enqueueNotification(int,android.app.Notification$Builder,boolean,boolean) -> a
    void loadNotifications() -> b
    1:1:boolean executeTask(com.unity.androidnotifications.UnityNotificationManager,com.unity.androidnotifications.UnityNotificationBackgroundThread$Task,java.util.concurrent.ConcurrentHashMap):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void enqueueHousekeeping():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelAllNotificationsTask -> com.unity.androidnotifications.b$a:
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelNotificationTask -> com.unity.androidnotifications.b$b:
    int notificationId -> a
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$HousekeepingTask -> com.unity.androidnotifications.b$c:
    com.unity.androidnotifications.UnityNotificationBackgroundThread thread -> a
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0:0 -> a
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0:0 -> a
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    2:2:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$ScheduleNotificationTask -> com.unity.androidnotifications.b$d:
    android.app.Notification$Builder notificationBuilder -> b
    boolean isCustomized -> c
    int notificationId -> a
    boolean isNew -> d
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$Task -> com.unity.androidnotifications.b$e:
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationManager -> com.unity.androidnotifications.UnityNotificationManager:
    android.content.Context mContext -> a
    java.util.concurrent.ConcurrentHashMap mScheduledNotifications -> g
    com.unity.androidnotifications.UnityNotificationBackgroundThread mBackgroundThread -> d
    java.util.Random mRandom -> e
    int mExactSchedulingSetting -> i
    com.unity.androidnotifications.UnityNotificationManager mUnityNotificationManager -> j
    java.util.HashSet mVisibleNotifications -> f
    com.unity.androidnotifications.NotificationCallback mNotificationCallback -> h
    android.app.Activity mActivity -> b
    java.lang.Class mOpenActivity -> c
    1:1:android.app.PendingIntent getActivityPendingIntent(int,android.content.Intent,int):0:0 -> a
    1:1:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    2:2:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0:0 -> a
    3:3:void finalizeNotificationForDisplay(android.app.Notification$Builder):0:0 -> a
    3:3:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    4:4:java.lang.Object getIconForUri(java.lang.String):0:0 -> a
    4:4:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    4:4:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    5:5:void finalizeNotificationForDisplay(android.app.Notification$Builder):0:0 -> a
    5:5:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    6:6:int com.unity.androidnotifications.UnityNotificationUtilities.findResourceIdInContextByName(android.content.Context,java.lang.String):0:0 -> a
    6:6:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    6:6:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    7:7:void finalizeNotificationForDisplay(android.app.Notification$Builder):0:0 -> a
    7:7:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    8:8:java.lang.Object getIcon(java.lang.String):0:0 -> a
    8:8:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    8:8:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    9:9:java.lang.Object getIconForUri(java.lang.String):0:0 -> a
    9:9:java.lang.Object getIcon(java.lang.String):0 -> a
    9:9:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    9:9:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    10:10:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    10:10:java.lang.Object getIcon(java.lang.String):0 -> a
    10:10:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    10:10:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    11:11:int com.unity.androidnotifications.UnityNotificationUtilities.findResourceIdInContextByName(android.content.Context,java.lang.String):0:0 -> a
    11:11:java.lang.Object getIconFromResources(java.lang.String,boolean):0 -> a
    11:11:java.lang.Object getIcon(java.lang.String):0 -> a
    11:11:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    11:11:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    12:12:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    12:12:java.lang.Object getIcon(java.lang.String):0 -> a
    12:12:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    12:12:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    13:13:void finalizeNotificationForDisplay(android.app.Notification$Builder):0:0 -> a
    13:13:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    14:14:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    14:14:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    14:14:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    15:15:java.lang.Object getIcon(java.lang.String):0:0 -> a
    15:15:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    15:15:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    15:15:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    16:16:java.lang.Object getIconForUri(java.lang.String):0:0 -> a
    16:16:java.lang.Object getIcon(java.lang.String):0 -> a
    16:16:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    16:16:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    16:16:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    17:17:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    17:17:java.lang.Object getIcon(java.lang.String):0 -> a
    17:17:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    17:17:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    17:17:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    18:18:int com.unity.androidnotifications.UnityNotificationUtilities.findResourceIdInContextByName(android.content.Context,java.lang.String):0:0 -> a
    18:18:java.lang.Object getIconFromResources(java.lang.String,boolean):0 -> a
    18:18:java.lang.Object getIcon(java.lang.String):0 -> a
    18:18:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    18:18:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    18:18:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    19:19:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    19:19:java.lang.Object getIcon(java.lang.String):0 -> a
    19:19:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    19:19:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    19:19:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    20:20:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    20:20:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    20:20:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    21:21:android.graphics.Bitmap loadBitmap(java.lang.String):0:0 -> a
    21:21:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    21:21:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    21:21:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    22:22:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    22:22:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    22:22:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    23:23:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    23:23:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    23:23:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    23:23:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    24:24:int com.unity.androidnotifications.UnityNotificationUtilities.findResourceIdInContextByName(android.content.Context,java.lang.String):0:0 -> a
    24:24:java.lang.Object getIconFromResources(java.lang.String,boolean):0 -> a
    24:24:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    24:24:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    24:24:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    25:25:java.lang.Object getIconFromResources(java.lang.String,boolean):0:0 -> a
    25:25:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    25:25:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    25:25:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    26:26:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    26:26:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    26:26:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    27:27:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0:0 -> a
    void cancelPendingNotificationIntent(int) -> a
    28:28:java.lang.String getSharedPrefsNameByNotificationId(java.lang.String):0:0 -> a
    28:28:void deleteExpiredNotificationIntent(java.lang.String):0 -> a
    29:29:void deleteExpiredNotificationIntent(java.lang.String):0:0 -> a
    android.app.PendingIntent getBroadcastPendingIntent(int,android.content.Intent,int) -> a
    com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.content.Context) -> a
    30:30:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0:0 -> a
    30:30:void lambda$showNotification$0(java.lang.Integer):0 -> a
    31:31:java.lang.String getSharedPrefsNameByNotificationId(java.lang.String):0:0 -> a
    31:31:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0 -> a
    31:31:void lambda$showNotification$0(java.lang.Integer):0 -> a
    32:32:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0:0 -> a
    32:32:void lambda$showNotification$0(java.lang.Integer):0 -> a
    33:33:void lambda$showNotification$0(java.lang.Integer):0:0 -> a
    34:34:void notify(int,android.app.Notification$Builder):0:0 -> a
    34:34:void lambda$showNotification$0(java.lang.Integer):0 -> a
    35:35:java.util.Set getScheduledNotificationIDs():0:0 -> a
    35:35:java.util.List loadSavedNotifications():0 -> a
    36:36:java.util.List loadSavedNotifications():0:0 -> a
    37:37:java.lang.String getSharedPrefsNameByNotificationId(java.lang.String):0:0 -> a
    37:37:java.util.List loadSavedNotifications():0 -> a
    38:38:java.util.List loadSavedNotifications():0:0 -> a
    39:39:boolean isInForeground():0:0 -> a
    39:39:void notify(int,android.app.Notification):0 -> a
    40:40:void notify(int,android.app.Notification):0:0 -> a
    41:41:android.content.Intent buildNotificationIntent():0:0 -> a
    41:41:java.util.Set findInvalidNotificationIds(java.util.Set):0 -> a
    41:41:void performNotificationHousekeeping(java.util.Set):0 -> a
    42:42:java.util.Set findInvalidNotificationIds(java.util.Set):0:0 -> a
    42:42:void performNotificationHousekeeping(java.util.Set):0 -> a
    43:43:void performNotificationHousekeeping(java.util.Set):0:0 -> a
    44:44:java.util.Set findInvalidNotificationIds(java.util.Set):0:0 -> a
    44:44:void performNotificationHousekeeping(java.util.Set):0 -> a
    45:45:android.content.Intent buildNotificationIntent():0:0 -> a
    45:45:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    46:46:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0:0 -> a
    47:47:void saveNotification(android.app.Notification,boolean):0:0 -> a
    47:47:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    48:48:java.lang.String getSharedPrefsNameByNotificationId(java.lang.String):0:0 -> a
    48:48:void saveNotification(android.app.Notification,boolean):0 -> a
    48:48:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    49:49:void saveNotification(android.app.Notification,boolean):0:0 -> a
    49:49:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    50:50:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0:0 -> a
    50:50:void saveNotification(android.app.Notification,boolean):0 -> a
    50:50:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    51:51:boolean com.unity.androidnotifications.UnityNotificationUtilities.serializeNotificationParcel(android.content.Intent,java.io.DataOutputStream):0:0 -> a
    51:51:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0 -> a
    51:51:void saveNotification(android.app.Notification,boolean):0 -> a
    51:51:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    52:52:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0:0 -> a
    52:52:void saveNotification(android.app.Notification,boolean):0 -> a
    52:52:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    53:53:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0:0 -> a
    54:54:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0:0 -> a
    54:54:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    55:55:boolean canScheduleExactAlarms(android.app.AlarmManager):0:0 -> a
    55:55:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0 -> a
    55:55:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    56:56:android.os.Bundle getAppMetadata():0:0 -> a
    56:56:boolean canScheduleExactAlarms(android.app.AlarmManager):0 -> a
    56:56:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0 -> a
    56:56:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    57:57:boolean canScheduleExactAlarms(android.app.AlarmManager):0:0 -> a
    57:57:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0 -> a
    57:57:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    58:58:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0:0 -> a
    58:58:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    59:59:java.lang.Object getNotificationOrIdForIntent(android.content.Intent):0:0 -> a
    59:59:void showNotification(android.content.Intent):0 -> a
    60:60:void showNotification(android.content.Intent):0:0 -> a
    61:61:void notify(int,android.app.Notification$Builder):0:0 -> a
    61:61:void showNotification(android.content.Intent):0 -> a
    62:62:void showNotification(android.content.Intent):0:0 -> a
    void saveScheduledNotificationIDs(java.util.Set) -> b
    1:1:boolean canScheduleExactAlarms(android.app.AlarmManager):0:0 -> canScheduleExactAlarms
    1:1:boolean canScheduleExactAlarms():0 -> canScheduleExactAlarms
    2:2:android.os.Bundle getAppMetadata():0:0 -> canScheduleExactAlarms
    2:2:boolean canScheduleExactAlarms(android.app.AlarmManager):0 -> canScheduleExactAlarms
    2:2:boolean canScheduleExactAlarms():0 -> canScheduleExactAlarms
    3:3:boolean canScheduleExactAlarms(android.app.AlarmManager):0:0 -> canScheduleExactAlarms
    3:3:boolean canScheduleExactAlarms():0 -> canScheduleExactAlarms
    1:1:java.lang.String getSharedPrefsNameByChannelId(java.lang.String):0:0 -> deleteNotificationChannel
    1:1:void deleteNotificationChannel(java.lang.String):0 -> deleteNotificationChannel
    2:2:void deleteNotificationChannel(java.lang.String):0:0 -> deleteNotificationChannel
    1:1:com.unity.androidnotifications.NotificationChannelWrapper notificationChannelToWrapper(java.lang.Object):0:0 -> getNotificationChannel
    1:1:com.unity.androidnotifications.NotificationChannelWrapper getNotificationChannel(java.lang.String):0 -> getNotificationChannel
    2:2:com.unity.androidnotifications.NotificationChannelWrapper getNotificationChannel(java.lang.String):0:0 -> getNotificationChannel
    3:3:java.lang.String getSharedPrefsNameByChannelId(java.lang.String):0:0 -> getNotificationChannel
    3:3:com.unity.androidnotifications.NotificationChannelWrapper getNotificationChannel(java.lang.String):0 -> getNotificationChannel
    4:4:com.unity.androidnotifications.NotificationChannelWrapper getNotificationChannel(java.lang.String):0:0 -> getNotificationChannel
    1:1:com.unity.androidnotifications.NotificationChannelWrapper notificationChannelToWrapper(java.lang.Object):0:0 -> getNotificationChannels
    1:1:com.unity.androidnotifications.NotificationChannelWrapper[] getNotificationChannels():0 -> getNotificationChannels
    2:2:com.unity.androidnotifications.NotificationChannelWrapper[] getNotificationChannels():0:0 -> getNotificationChannels
    1:1:java.lang.Object getNotificationOrIdForIntent(android.content.Intent):0:0 -> getNotificationFromIntent
    1:1:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0 -> getNotificationFromIntent
    1:1:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    2:2:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0:0 -> getNotificationFromIntent
    2:2:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    3:3:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0:0 -> getNotificationFromIntent
    3:3:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0 -> getNotificationFromIntent
    3:3:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    4:4:java.lang.String getSharedPrefsNameByNotificationId(java.lang.String):0:0 -> getNotificationFromIntent
    4:4:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0 -> getNotificationFromIntent
    4:4:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0 -> getNotificationFromIntent
    4:4:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    5:5:android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer):0:0 -> getNotificationFromIntent
    5:5:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0 -> getNotificationFromIntent
    5:5:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    6:6:android.app.Notification getNotificationFromIntent(android.content.Intent):0:0 -> getNotificationFromIntent
    1:1:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    1:1:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    2:2:android.os.Bundle getAppMetadata():0:0 -> getNotificationManagerImpl
    2:2:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    2:2:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    3:3:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    3:3:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    4:4:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    5:5:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    5:5:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    1:1:java.lang.String getSharedPrefsNameByChannelId(java.lang.String):0:0 -> registerNotificationChannel
    1:1:void registerNotificationChannel(java.lang.String,java.lang.String,int,java.lang.String,boolean,boolean,boolean,boolean,long[],int,java.lang.String):0 -> registerNotificationChannel
    2:2:void registerNotificationChannel(java.lang.String,java.lang.String,int,java.lang.String,boolean,boolean,boolean,boolean,long[],int,java.lang.String):0:0 -> registerNotificationChannel
    1:1:int generateUniqueId():0:0 -> scheduleNotification
    1:1:int scheduleNotification(android.app.Notification$Builder,boolean):0 -> scheduleNotification
    2:2:int scheduleNotification(android.app.Notification$Builder,boolean):0:0 -> scheduleNotification
com.unity.androidnotifications.UnityNotificationRestartReceiver -> com.unity.androidnotifications.UnityNotificationRestartReceiver:
    1:1:void rescheduleSavedNotifications(android.content.Context):0:0 -> a
    1:1:void lambda$onReceive$0(android.content.Context):0 -> a
    2:2:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0:0 -> a
    2:2:void rescheduleSavedNotifications(android.content.Context):0 -> a
    2:2:void lambda$onReceive$0(android.content.Context):0 -> a
    3:3:void com.unity.androidnotifications.UnityNotificationManager.notify(int,android.app.Notification$Builder):0:0 -> a
    3:3:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0 -> a
    3:3:void rescheduleSavedNotifications(android.content.Context):0 -> a
    3:3:void lambda$onReceive$0(android.content.Context):0 -> a
    4:4:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0:0 -> a
    4:4:void rescheduleSavedNotifications(android.content.Context):0 -> a
    4:4:void lambda$onReceive$0(android.content.Context):0 -> a
    5:5:void com.unity.androidnotifications.UnityNotificationManager.scheduleAlarmWithNotification(android.app.Notification$Builder):0:0 -> a
    5:5:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0 -> a
    5:5:void rescheduleSavedNotifications(android.content.Context):0 -> a
    5:5:void lambda$onReceive$0(android.content.Context):0 -> a
    6:6:android.content.Intent com.unity.androidnotifications.UnityNotificationManager.buildNotificationIntent():0:0 -> a
    6:6:void com.unity.androidnotifications.UnityNotificationManager.scheduleAlarmWithNotification(android.app.Notification$Builder):0 -> a
    6:6:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0 -> a
    6:6:void rescheduleSavedNotifications(android.content.Context):0 -> a
    6:6:void lambda$onReceive$0(android.content.Context):0 -> a
    7:7:void com.unity.androidnotifications.UnityNotificationManager.scheduleAlarmWithNotification(android.app.Notification$Builder):0:0 -> a
    7:7:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0 -> a
    7:7:void rescheduleSavedNotifications(android.content.Context):0 -> a
    7:7:void lambda$onReceive$0(android.content.Context):0 -> a
    8:8:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0:0 -> a
    8:8:void rescheduleSavedNotifications(android.content.Context):0 -> a
    8:8:void lambda$onReceive$0(android.content.Context):0 -> a
com.unity.androidnotifications.UnityNotificationUtilities -> com.unity.androidnotifications.c:
    byte[] UNITY_MAGIC_NUMBER_PARCELLED -> b
    byte[] UNITY_MAGIC_NUMBER -> a
    java.lang.Object deserializeNotification(android.content.Context,android.content.SharedPreferences) -> a
    1:1:android.app.Notification deserializeNotificationParcelable(java.io.DataInputStream):0:0 -> a
    1:1:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    2:2:java.lang.Object deserializeNotification(android.content.Context,byte[]):0:0 -> a
    3:3:android.app.Notification$Builder deserializeNotificationCustom(android.content.Context,java.io.DataInputStream):0:0 -> a
    3:3:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    4:4:android.app.Notification$Builder deserializedFromOldIntent(android.content.Context,byte[]):0:0 -> a
    4:4:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    android.os.Parcelable deserializeParcelable(java.io.DataInputStream) -> a
    5:5:boolean isUnityActivity(java.lang.String):0:0 -> a
    5:5:java.lang.Class getOpenAppActivity(android.content.Context):0 -> a
    6:6:java.lang.Class getOpenAppActivity(android.content.Context):0:0 -> a
    boolean readAndCheckMagicNumber(java.io.DataInputStream,byte[]) -> a
    7:7:android.app.Notification$Builder recoverBuilderCustom(android.content.Context,android.app.Notification):0:0 -> a
    7:7:android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification):0 -> a
    boolean serializeNotificationCustom(android.app.Notification,java.io.DataOutputStream) -> a
    byte[] serializeParcelable(android.os.Parcelable) -> a
    void serializeString(java.io.DataOutputStream,java.lang.String) -> a
    java.lang.String deserializeString(java.io.DataInputStream) -> b
com.unity3d.player.I -> a.a:
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    int $r8$clinit -> a
    1:1:boolean com.unity3d.player.I.a():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
